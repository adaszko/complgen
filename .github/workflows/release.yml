name: Release
on:
  push:
    tags:
      - test
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  release-linux-x86_64-binaries:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Configure build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Build the binaries
        uses: addnab/docker-run-action@v3
        with:
            image: registry.gitlab.com/rust_musl_docker/image:stable-latest
            options: -v ${{ github.workspace }}:/workdir -v /home/runner/.cargo/git:/root/.cargo/git -v /home/runner/.cargo/registry:/root/.cargo/registry
            run: |
              rustup target add x86_64-unknown-linux-musl
              cargo build --release --target=x86_64-unknown-linux-musl
              cp target/x86_64-unknown-linux-musl/release/complgen complgen-x86_64-unknown-linux-musl
      - uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          files: |
            complgen-x86_64-unknown-linux-musl


  release-linux-arm-binaries:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Configure build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Build the binaries
        uses: addnab/docker-run-action@v3
        with:
            image: messense/rust-musl-cross:aarch64-musl
            options: -v ${{ github.workspace }}:/home/rust/src -v /home/runner/.cargo/git:/root/.cargo/git -v /home/runner/.cargo/registry:/root/.cargo/registry
            run: |
              rustup target add aarch64-unknown-linux-musl
              cargo build --release
              cp target/aarch64-unknown-linux-musl/release/complgen complgen-aarch64-unknown-linux-musl
      - uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          files: |
            complgen-aarch64-unknown-linux-musl


  release-macos-binaries:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: aarch64-apple-darwin
      - name: Build the release binaries
        run: |
          cargo build --release --target aarch64-apple-darwin
          cp target/aarch64-apple-darwin/release/complgen complgen-aarch64-apple-darwin
      - uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          files: |
            complgen-aarch64-apple-darwin
